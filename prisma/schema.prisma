
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
}
model Task {
  id String @id @default(uuid())
  content String
  createdAt DateTime @default(now())
  completed Boolean @default(false)
}
// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? //@db.Text
    access_token      String? //@db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? //@db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model User {
    id                 String    @id @default(cuid())
    name               String
    password           String?
    email              String   @unique
    emailVerified      DateTime?
    image              String?
    accounts           Account[]
    // isPaymentSucceeded Boolean   @default(false)
    // uniqueKeyword      String?
    // modelTrainingLimit Int       @default(0)
    // trainerVersion     String?
    // credits            Int       @default(50)
    // modelId            String?
    // images             Image[]
}

// model Image {
//     id       String @id @default(cuid())
//     imageUrl String
//     userId   String
//     User     User   @relation(fields: [userId], references: [id])

//     @@index([userId])
// }
